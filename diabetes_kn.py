# -*- coding: utf-8 -*-
"""Diabetes_KN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z8q46ZwdV-GhnUvh4h9417TaBhedi-I6
"""

from google.colab import files
import pandas as pd 
import numpy as np
import io
import matplotlib.pyplot as plt
import seaborn as sns
import sklearn
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split

uploaded = files.upload()
diabetes = pd.read_csv(io.BytesIO(uploaded['diabetes.csv'])) 
diabetes.head()

diabetes.corr()

def plot_corr(df, size=11):
    corr = df.corr()
    fig, ax = plt.subplots(figsize=(size, size))
    ax.matshow(corr)
    plt.xticks(range(len(corr.columns)), corr.columns)
    plt.yticks(range(len(corr.columns)), corr.columns)

plot_corr(diabetes)

features_cols = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age']
predicted_class = ['Outcome']

X = diabetes[features_cols].values
y = diabetes[predicted_class].values

X_train, X_test, y_train, y_test = train_test_split(
    diabetes[features_cols], diabetes['Outcome'], random_state=0)

knn = KNeighborsClassifier(n_neighbors=4)
knn.fit(X_train, y_train)

y_pred = knn.predict(X_test)
print("Test set predictions:\n", y_pred)

print("Test set score: {:.2f}".format(np.mean(y_pred == y_test)))